// api/proto/v1/quorum_quest_api.proto

// @generated by protoc-gen-connect-web v0.11.0 with parameter "target=ts"
// @generated from file v1/quorum_quest_api.proto (package quorum.quest.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { KeepAliveRequest, KeepAliveResponse, ReleaseLockRequest, ReleaseLockResponse, TryAcquireLockRequest, TryAcquireLockResponse } from "./quorum_quest_api_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * LeaderElectionService provides distributed leader election capabilities
 *
 * @generated from service quorum.quest.api.v1.LeaderElectionService
 */
export const LeaderElectionService = {
  typeName: "quorum.quest.api.v1.LeaderElectionService",
  methods: {
    /**
     * TryAcquireLock attempts to acquire leadership for a given service/domain
     *
     * @generated from rpc quorum.quest.api.v1.LeaderElectionService.TryAcquireLock
     */
    tryAcquireLock: {
      name: "TryAcquireLock",
      I: TryAcquireLockRequest,
      O: TryAcquireLockResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ReleaseLock voluntarily releases leadership
     *
     * @generated from rpc quorum.quest.api.v1.LeaderElectionService.ReleaseLock
     */
    releaseLock: {
      name: "ReleaseLock",
      I: ReleaseLockRequest,
      O: ReleaseLockResponse,
      kind: MethodKind.Unary,
    },
    /**
     * KeepAlive extends the leadership lease
     *
     * @generated from rpc quorum.quest.api.v1.LeaderElectionService.KeepAlive
     */
    keepAlive: {
      name: "KeepAlive",
      I: KeepAliveRequest,
      O: KeepAliveResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

