services:
  scylla:
    container_name: scylla
    image: scylladb/scylla:latest
    restart: always
    command: --smp 1 --memory 750M --overprovisioned 1 --reactor-backend=epoll
    ports:
      - 9042:9042
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "select * from system.local"]
      interval: 10s
      timeout: 5s
      retries: 18
    networks:
      - tasks-network

  scylla-2:
    container_name: scylla-2
    image: scylladb/scylla:latest
    restart: always
    command: --seeds=scylla --smp 1 --memory 750M --overprovisioned 1 --reactor-backend=epoll
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "select * from system.local"]
      interval: 5s
      timeout: 10s
      retries: 18
    networks:
      - tasks-network

  scylla-3:
    container_name: scylla-3
    image: scylladb/scylla:latest
    restart: always
    command: --seeds=scylla --smp 1 --memory 750M --overprovisioned 1 --reactor-backend=epoll
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "select * from system.local"]
      interval: 5s
      timeout: 10s
      retries: 18
    networks:
      - tasks-network

  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    ports:
      - 4317:4317
    networks:
      - tasks-network

  dynamodb-local:
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    working_dir: /home/dynamodblocal
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    ports:
      - "8000:8000"
    volumes:
      - "./data/dynamodb:/home/dynamodblocal/data"
    networks:
      - tasks-network
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - ./redis-data:/data
    networks:
      - tasks-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always

networks:
  tasks-network:
    driver: bridge